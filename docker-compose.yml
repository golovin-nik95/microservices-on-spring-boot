version: '3'
services:
  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/tree/1.19.0/zipkin-server#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411

  config-server:
    container_name: config-server
    build: ms-config-server
    ports:
      - 8888:8888

  service-registry:
    container_name: service-registry
    build: ms-service-registry
    ports:
      - 8761:8761
    depends_on:
      - config-server

  hystrix-dashboard:
    container_name: hystrix-dashboard
    build: ms-hystrix-dashboard
    ports:
      - 8788:8788
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 8888); do sleep 5; echo 'Waiting for config-server service to start-up...'; done;
      java -jar -Dspring.profiles.active=docker /app.jar
      "

  catalog-service:
    container_name: catalog-service
    build: ms-catalog
    ports:
      - 8181:8181
    volumes:
      - ./dataset:/dataset
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 8888); do sleep 5; echo 'Waiting for config-server service to start-up...'; done;
      java -jar -Dspring.profiles.active=docker /app.jar
      "

  inventory-service:
    container_name: inventory-service
    build: ms-inventory
    ports:
      - 8282:8282
    volumes:
      - ./dataset:/dataset
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 8888); do sleep 5; echo 'Waiting for config-server service to start-up...'; done;
      java -jar -Dspring.profiles.active=docker /app.jar
      "

  product-service:
    container_name: product-service
    build: ms-product
    ports:
      - 8383:8383
    depends_on:
      - config-server
    entrypoint: /bin/sh
    command: >
      -c "
      while ! (nc -z config-server 8888); do sleep 5; echo 'Waiting for config-server service to start-up...'; done;
      java -jar -Dspring.profiles.active=docker /app.jar
      "